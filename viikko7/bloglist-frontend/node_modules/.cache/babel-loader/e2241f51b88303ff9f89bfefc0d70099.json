{"ast":null,"code":"import _regeneratorRuntime from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar notificationReducer = function notificationReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('notification = ', state);\n\n  switch (action.type) {\n    case 'NOTIFY':\n      return _objectSpread({}, state, {\n        message: action.data.message\n      });\n\n    case 'HIDE':\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport var notifyAction = function notifyAction(message, notificationType, time) {\n  console.log('time = ', time);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('meneee tokaa');\n                dispatch({\n                  type: 'NOTIFY',\n                  data: {\n                    message: message,\n                    type: notificationType\n                  }\n                });\n                setTimeout(function () {\n                  dispatch({\n                    type: 'HIDE',\n                    data: ''\n                  });\n                }, time * 1000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport default notificationReducer;","map":{"version":3,"sources":["/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/reducers/notificationReducer.js"],"names":["notificationReducer","state","action","console","log","type","message","data","notifyAction","notificationType","time","dispatch","setTimeout"],"mappings":";;;;AAAA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,QAAL;AACE,+BAAYJ,KAAZ;AAAmBK,QAAAA,OAAO,EAAEJ,MAAM,CAACK,IAAP,CAAYD;AAAxC;;AACF,SAAK,MAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOL,KAAP;AANJ;AAQD,CAVD;;AAYA,OAAO,IAAMO,YAAY,GAAG,SAAfA,YAAe,CAACF,OAAD,EAAUG,gBAAV,EAA4BC,IAA5B,EAAqC;AAC/DP,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,IAAvB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACLR,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAO,gBAAAA,QAAQ,CAAC;AACPN,kBAAAA,IAAI,EAAE,QADC;AAEPE,kBAAAA,IAAI,EAAE;AAAED,oBAAAA,OAAO,EAAPA,OAAF;AAAWD,oBAAAA,IAAI,EAAEI;AAAjB;AAFC,iBAAD,CAAR;AAKAG,gBAAAA,UAAU,CAAC,YAAM;AACfD,kBAAAA,QAAQ,CAAC;AACPN,oBAAAA,IAAI,EAAE,MADC;AAEPE,oBAAAA,IAAI,EAAE;AAFC,mBAAD,CAAR;AAID,iBALS,EAKPG,IAAI,GAAG,IALA,CAAV;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcD,CAhBM;AAkBP,eAAeV,mBAAf","sourcesContent":["const notificationReducer = (state = {}, action) => {\n  console.log('notification = ', state)\n  switch (action.type) {\n    case 'NOTIFY':\n      return { ...state, message: action.data.message }\n    case 'HIDE':\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const notifyAction = (message, notificationType, time) => {\n  console.log('time = ', time)\n  return async (dispatch) => {\n    console.log('meneee tokaa')\n    dispatch({\n      type: 'NOTIFY',\n      data: { message, type: notificationType }\n    })\n\n    setTimeout(() => {\n      dispatch({\n        type: 'HIDE',\n        data: ''\n      })\n    }, time * 1000)\n  }\n}\n\nexport default notificationReducer"]},"metadata":{},"sourceType":"module"}