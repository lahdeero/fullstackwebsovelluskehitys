{"ast":null,"code":"import _regeneratorRuntime from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport { useField } from './hooks';\nimport { notifyAction } from './reducers/notificationReducer';\nimport { initializeBlogs, addBlogAction, likeBlogAction, removeBlogAction } from './reducers/blogReducer';\nimport ListBlogs from './components/ListBlogs';\nimport { loginAction, logoutAction } from './reducers/userReducer';\n\nvar App = function App(props) {\n  var _useField = useField('text'),\n      _useField2 = _slicedToArray(_useField, 1),\n      username = _useField2[0];\n\n  var _useField3 = useField('password'),\n      _useField4 = _slicedToArray(_useField3, 1),\n      password = _useField4[0];\n\n  useEffect(function () {\n    var init =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var loggedUserJSON, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n\n                if (loggedUserJSON) {\n                  user = JSON.parse(loggedUserJSON);\n                  console.log('user parse = ', user);\n                  blogService.setToken(user.token);\n                  props.loginAction(user);\n                }\n\n                blogService.getAll().then(function (blogs) {\n                  return props.initializeBlogs(blogs);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function init() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    init();\n  }, [props]);\n\n  var notify =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(message) {\n      var type,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 'success';\n              _context2.next = 3;\n              return props.notifyAction(message, type, 5);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function notify(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleLogin =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(event) {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return loginService.login({\n                username: username.value,\n                password: password.value\n              });\n\n            case 4:\n              user = _context3.sent;\n              window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n              blogService.setToken(user.token);\n              window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n              loginAction(user);\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              notify('wrong username of password', 'error');\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n\n    return function handleLogin(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleLogout = function handleLogout() {\n    blogService.destroyToken();\n    window.localStorage.removeItem('loggedBlogAppUser');\n    props.logoutAction();\n  };\n\n  if (props.user === null) {\n    console.log('on null');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"log in to application\"), React.createElement(\"form\", {\n      onSubmit: handleLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"k\\xE4ytt\\xE4j\\xE4tunnus\", React.createElement(\"input\", Object.assign({}, username, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"salasana\", React.createElement(\"input\", Object.assign({}, password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"kirjaudu\")));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Notification, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ListBlogs, {\n      user: props.user,\n      blogs: props.blogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    notification: state.notification,\n    blogs: state.blogs,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  loginAction: loginAction,\n  logoutAction: logoutAction,\n  initializeBlogs: initializeBlogs,\n  addBlogAction: addBlogAction,\n  likeBlogAction: likeBlogAction,\n  removeBlogAction: removeBlogAction,\n  notifyAction: notifyAction\n};\nvar ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;","map":{"version":3,"sources":["/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/App.js"],"names":["React","useEffect","connect","blogService","loginService","Notification","useField","notifyAction","initializeBlogs","addBlogAction","likeBlogAction","removeBlogAction","ListBlogs","loginAction","logoutAction","App","props","username","password","init","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","console","log","setToken","token","getAll","then","blogs","notify","message","type","handleLogin","event","preventDefault","login","value","setItem","stringify","handleLogout","destroyToken","removeItem","mapStateToProps","state","notification","mapDispatchToProps","ConnectedApp"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport { useField } from './hooks'\nimport { notifyAction } from './reducers/notificationReducer'\nimport { initializeBlogs, addBlogAction, likeBlogAction, removeBlogAction } from './reducers/blogReducer'\nimport ListBlogs from './components/ListBlogs';\nimport { loginAction, logoutAction } from './reducers/userReducer'\n\nconst App = (props) => {\n  const [username] = useField('text')\n  const [password] = useField('password')\n\n  useEffect(() => {\n    const init = async () => {\n      const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON)\n        console.log('user parse = ', user)\n        blogService.setToken(user.token)\n        props.loginAction(user)\n      }\n      blogService\n        .getAll().then(blogs => props.initializeBlogs(blogs))\n    }\n    init()\n  }, [props])\n\n  const notify = async (message, type = 'success') => {\n    await props.notifyAction(message, type, 5)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: username.value,\n        password: password.value\n      })\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\n      loginAction(user)\n    } catch (exception) {\n      notify('wrong username of password', 'error')\n    }\n  }\n\n  const handleLogout = () => {\n    blogService.destroyToken()\n    window.localStorage.removeItem('loggedBlogAppUser')\n    props.logoutAction()\n  }\n\n  if (props.user === null) {\n    console.log('on null')\n    return (\n      <div>\n        <h2>log in to application</h2>\n\n        {/* <Notification notification={props.notification} /> */}\n\n        <form onSubmit={handleLogin}>\n          <div>\n            käyttäjätunnus\n          <input {...username} />\n          </div>\n          <div>\n            salasana\n          <input {...password} />\n          </div>\n          <button type=\"submit\">kirjaudu</button>\n        </form>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <Notification />\n        <ListBlogs user={props.user} blogs={props.blogs} />\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    notification: state.notification,\n    blogs: state.blogs,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  loginAction,\n  logoutAction,\n  initializeBlogs,\n  addBlogAction,\n  likeBlogAction,\n  removeBlogAction,\n  notifyAction\n}\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default ConnectedApp"]},"metadata":{},"sourceType":"module"}