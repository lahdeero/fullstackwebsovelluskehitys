{"ast":null,"code":"import _regeneratorRuntime from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/components/ListBlogs.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Togglable from './Togglable';\nimport NewBlog from './NewBlog';\nimport Blog from './Blog';\nimport { addBlogAction, likeBlogAction, removeBlogAction } from '../reducers/blogReducer';\nimport Notification from './Notification';\nimport { notifyAction } from '../reducers/notificationReducer';\n\nvar ListBlogs = function ListBlogs(props) {\n  var newBlogRef = React.createRef();\n\n  var byLikes = function byLikes(b1, b2) {\n    return b2.likes - b1.likes;\n  };\n\n  var notify =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(message) {\n      var type,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'success';\n              console.log(message, type);\n              console.log('eka');\n              _context.next = 5;\n              return props.notifyAction(message, type, 5);\n\n            case 5:\n              console.log('kolmas');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function notify(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createBlog =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(blog) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newBlogRef.current.toggleVisibility();\n              props.addBlogAction(props.blogs.concat(blog)).then(function (createdBlog) {\n                return notify(\"a new blog \".concat(createdBlog.title, \" by \").concat(createdBlog.author, \" added\"));\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createBlog(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var likeBlog = function likeBlog(blog) {\n    props.likeBlogAction(blog).then(function (updatedBlog) {\n      return notify(\"blog \".concat(updatedBlog.title, \" by \").concat(updatedBlog.author, \" liked!\"));\n    });\n  };\n\n  var removeBlog = function removeBlog(blog) {\n    var ok = window.confirm(\"remove blog \".concat(blog.title, \" by \").concat(blog.author));\n\n    if (ok) {\n      props.removeBlogAction(blog).then(notify(\"blog \".concat(blog.title, \" by \").concat(blog.author, \" removed!\")));\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.user && props.user.name, \" logged in\"), React.createElement(\"button\", {\n    onClick: props.handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"logout\"), React.createElement(Togglable, {\n    buttonLabel: \"create new\",\n    ref: newBlogRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(NewBlog, {\n    createBlog: createBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), props.blogs.sort(byLikes).map(function (blog) {\n    return React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      like: likeBlog,\n      remove: removeBlog,\n      user: props.user,\n      creator: blog.user.username === props.user.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = {\n  addBlogAction: addBlogAction,\n  likeBlogAction: likeBlogAction,\n  removeBlogAction: removeBlogAction,\n  notifyAction: notifyAction\n};\nvar ConnectedListBlogs = connect(mapStateToProps, mapDispatchToProps)(ListBlogs);\nexport default ConnectedListBlogs;","map":{"version":3,"sources":["/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/components/ListBlogs.js"],"names":["React","connect","Togglable","NewBlog","Blog","addBlogAction","likeBlogAction","removeBlogAction","Notification","notifyAction","ListBlogs","props","newBlogRef","createRef","byLikes","b1","b2","likes","notify","message","type","console","log","createBlog","blog","current","toggleVisibility","blogs","concat","then","createdBlog","title","author","likeBlog","updatedBlog","removeBlog","ok","window","confirm","user","name","handleLogout","sort","map","id","username","mapStateToProps","state","mapDispatchToProps","ConnectedListBlogs"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,gBAAxC,QAAgE,yBAAhE;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAE3B,MAAMC,UAAU,GAAGZ,KAAK,CAACa,SAAN,EAAnB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAKC,EAAL;AAAA,WAAYA,EAAE,CAACC,KAAH,GAAWF,EAAE,CAACE,KAA1B;AAAA,GAAhB;;AAEA,MAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,cAAAA,IAAhB,2DAAuB,SAAvB;AACbC,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAAqBC,IAArB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAFa;AAAA,qBAGPX,KAAK,CAACF,YAAN,CAAmBU,OAAnB,EAA4BC,IAA5B,EAAkC,CAAlC,CAHO;;AAAA;AAIbC,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANJ,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAOA,MAAMK,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACjBZ,cAAAA,UAAU,CAACa,OAAX,CAAmBC,gBAAnB;AACAf,cAAAA,KAAK,CAACN,aAAN,CAAoBM,KAAK,CAACgB,KAAN,CAAYC,MAAZ,CAAmBJ,IAAnB,CAApB,EAA8CK,IAA9C,CAAmD,UAAAC,WAAW;AAAA,uBAC5DZ,MAAM,sBAAeY,WAAW,CAACC,KAA3B,iBAAuCD,WAAW,CAACE,MAAnD,YADsD;AAAA,eAA9D;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVT,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAMA,MAAMU,QAAQ,GAAG,SAAXA,QAAW,CAACT,IAAD,EAAU;AACzBb,IAAAA,KAAK,CAACL,cAAN,CAAqBkB,IAArB,EAA2BK,IAA3B,CAAgC,UAAAK,WAAW;AAAA,aACzChB,MAAM,gBAASgB,WAAW,CAACH,KAArB,iBAAiCG,WAAW,CAACF,MAA7C,aADmC;AAAA,KAA3C;AAED,GAHD;;AAKA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACX,IAAD,EAAU;AAC3B,QAAMY,EAAE,GAAGC,MAAM,CAACC,OAAP,uBAA8Bd,IAAI,CAACO,KAAnC,iBAA+CP,IAAI,CAACQ,MAApD,EAAX;;AACA,QAAII,EAAJ,EAAQ;AACNzB,MAAAA,KAAK,CAACJ,gBAAN,CAAuBiB,IAAvB,EAA6BK,IAA7B,CACEX,MAAM,gBAASM,IAAI,CAACO,KAAd,iBAA0BP,IAAI,CAACQ,MAA/B,eADR;AAGD;AACF,GAPD;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIrB,KAAK,CAAC4B,IAAN,IAAc5B,KAAK,CAAC4B,IAAN,CAAWC,IAA7B,eAHF,EAIE;AAAQ,IAAA,OAAO,EAAE7B,KAAK,CAAC8B,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAME,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,YAAvB;AAAoC,IAAA,GAAG,EAAE7B,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEW,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAUGZ,KAAK,CAACgB,KAAN,CAAYe,IAAZ,CAAiB5B,OAAjB,EAA0B6B,GAA1B,CAA8B,UAAAnB,IAAI;AAAA,WACjC,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACoB,EADZ;AAEE,MAAA,IAAI,EAAEpB,IAFR;AAGE,MAAA,IAAI,EAAES,QAHR;AAIE,MAAA,MAAM,EAAEE,UAJV;AAKE,MAAA,IAAI,EAAExB,KAAK,CAAC4B,IALd;AAME,MAAA,OAAO,EAAEf,IAAI,CAACe,IAAL,CAAUM,QAAV,KAAuBlC,KAAK,CAAC4B,IAAN,CAAWM,QAN7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiC;AAAA,GAAlC,CAVH,CADF;AAuBD,CAvDD;;AAyDA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLpB,IAAAA,KAAK,EAAEoB,KAAK,CAACpB,KADR;AAELY,IAAAA,IAAI,EAAEQ,KAAK,CAACR;AAFP,GAAP;AAID,CALD;;AAOA,IAAMS,kBAAkB,GAAG;AACzB3C,EAAAA,aAAa,EAAbA,aADyB;AAEzBC,EAAAA,cAAc,EAAdA,cAFyB;AAGzBC,EAAAA,gBAAgB,EAAhBA,gBAHyB;AAIzBE,EAAAA,YAAY,EAAZA;AAJyB,CAA3B;AAOA,IAAMwC,kBAAkB,GAAGhD,OAAO,CAAC6C,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtC,SAA7C,CAA3B;AAEA,eAAeuC,kBAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Togglable from './Togglable'\nimport NewBlog from './NewBlog'\nimport Blog from './Blog'\nimport { addBlogAction, likeBlogAction, removeBlogAction } from '../reducers/blogReducer'\nimport Notification from './Notification'\nimport { notifyAction } from '../reducers/notificationReducer'\n\nconst ListBlogs = (props) => {\n\n  const newBlogRef = React.createRef()\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n\n  const notify = async (message, type = 'success') => {\n    console.log(message, type)\n    console.log('eka')\n    await props.notifyAction(message, type, 5)\n    console.log('kolmas')\n  }\n\n  const createBlog = async (blog) => {\n    newBlogRef.current.toggleVisibility()\n    props.addBlogAction(props.blogs.concat(blog)).then(createdBlog => \n      notify(`a new blog ${createdBlog.title} by ${createdBlog.author} added`))\n  }\n\n  const likeBlog = (blog) => {\n    props.likeBlogAction(blog).then(updatedBlog =>\n      notify(`blog ${updatedBlog.title} by ${updatedBlog.author} liked!`))\n  }\n\n  const removeBlog = (blog) => {\n    const ok = window.confirm(`remove blog ${blog.title} by ${blog.author}`)\n    if (ok) {\n      props.removeBlogAction(blog).then(\n        notify(`blog ${blog.title} by ${blog.author} removed!`)\n      )\n    }\n  }\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <p>{props.user && props.user.name} logged in</p>\n      <button onClick={props.handleLogout}>logout</button>\n\n      <Togglable buttonLabel='create new' ref={newBlogRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {props.blogs.sort(byLikes).map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          like={likeBlog}\n          remove={removeBlog}\n          user={props.user}\n          creator={blog.user.username === props.user.username}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    blogs: state.blogs,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  addBlogAction,\n  likeBlogAction,\n  removeBlogAction,\n  notifyAction\n}\n\nconst ConnectedListBlogs = connect(mapStateToProps, mapDispatchToProps)(ListBlogs)\n\nexport default ConnectedListBlogs"]},"metadata":{},"sourceType":"module"}