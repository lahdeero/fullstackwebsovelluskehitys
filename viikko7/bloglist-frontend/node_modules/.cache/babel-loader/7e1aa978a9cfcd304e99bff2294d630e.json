{"ast":null,"code":"import _objectSpread from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/components/ListBlogs.js\";\nimport React from 'react';\nimport Togglable from './Togglable';\nimport NewBlog from './NewBlog';\nimport Blog from './Blog';\nimport blogService from '../services/blogs';\nimport { addBlogAction, likeBlogAction, removeBlogAction } from '../reducers/blogReducer';\nimport Notification from './Notification';\nimport { notifyAction } from '../reducers/notificationReducer';\n\nvar ListBlogs = function ListBlogs(props) {\n  var newBlogRef = React.createRef();\n\n  var byLikes = function byLikes(b1, b2) {\n    return b2.likes - b1.likes;\n  };\n\n  var notify =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(message) {\n      var type,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              type = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'success';\n              console.log(message, type);\n              console.log('eka');\n              _context.next = 5;\n              return notifyAction(message, type, 5);\n\n            case 5:\n              console.log('kolmas');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function notify(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var createBlog =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(blog) {\n      var createdBlog;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return blogService.create(blog);\n\n            case 2:\n              createdBlog = _context2.sent;\n              newBlogRef.current.toggleVisibility();\n              props.addBlogAction(props.blogs.concat(createdBlog));\n              _context2.next = 7;\n              return notify(\"a new blog \".concat(createdBlog.title, \" by \").concat(createdBlog.author, \" added\"));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function createBlog(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var likeBlog =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(blog) {\n      var likedBlog, updatedBlog;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              likedBlog = _objectSpread({}, blog, {\n                likes: blog.likes + 1\n              });\n              _context3.next = 3;\n              return blogService.update(likedBlog);\n\n            case 3:\n              updatedBlog = _context3.sent;\n              props.likeBlogAction(updatedBlog);\n              _context3.next = 7;\n              return notify(\"blog \".concat(updatedBlog.title, \" by \").concat(updatedBlog.author, \" liked!\"));\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function likeBlog(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeBlog =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(blog) {\n      var ok, updatedBlog;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              ok = window.confirm(\"remove blog \".concat(blog.title, \" by \").concat(blog.author));\n\n              if (!ok) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.next = 4;\n              return blogService.remove(blog);\n\n            case 4:\n              updatedBlog = _context4.sent;\n              props.removeBlogAction(props.blogs.filter(function (b) {\n                return b.id !== blog.id;\n              }));\n              notify(\"blog \".concat(updatedBlog.title, \" by \").concat(updatedBlog.author, \" removed!\"));\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function removeBlog(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"blogs\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.user && props.user.name, \" logged in\"), React.createElement(\"button\", {\n    onClick: props.handleLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"logout\"), React.createElement(Togglable, {\n    buttonLabel: \"create new\",\n    ref: newBlogRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(NewBlog, {\n    createBlog: createBlog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), props.blogs.sort(byLikes).map(function (blog) {\n    return React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      like: likeBlog,\n      remove: removeBlog,\n      user: props.user,\n      creator: blog.user.username === props.user.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ListBlogs;","map":{"version":3,"sources":["/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/components/ListBlogs.js"],"names":["React","Togglable","NewBlog","Blog","blogService","addBlogAction","likeBlogAction","removeBlogAction","Notification","notifyAction","ListBlogs","props","newBlogRef","createRef","byLikes","b1","b2","likes","notify","message","type","console","log","createBlog","blog","create","createdBlog","current","toggleVisibility","blogs","concat","title","author","likeBlog","likedBlog","update","updatedBlog","removeBlog","ok","window","confirm","remove","filter","b","id","user","name","handleLogout","sort","map","username"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Togglable from './Togglable'\nimport NewBlog from './NewBlog'\nimport Blog from './Blog'\nimport blogService from '../services/blogs'\nimport { addBlogAction, likeBlogAction, removeBlogAction } from '../reducers/blogReducer'\nimport Notification from './Notification'\nimport { notifyAction } from '../reducers/notificationReducer'\n\nconst ListBlogs = (props) => {\n\n  const newBlogRef = React.createRef()\n\n  const byLikes = (b1, b2) => b2.likes - b1.likes\n  const notify = async (message, type = 'success') => {\n    console.log(message, type)\n    console.log('eka')\n    await notifyAction(message, type, 5)\n    console.log('kolmas')\n  }\n\n  const createBlog = async (blog) => {\n    const createdBlog = await blogService.create(blog)\n    newBlogRef.current.toggleVisibility()\n    props.addBlogAction(props.blogs.concat(createdBlog))\n    await notify(`a new blog ${createdBlog.title} by ${createdBlog.author} added`)\n  }\n\n  const likeBlog = async (blog) => {\n    const likedBlog = { ...blog, likes: blog.likes + 1 }\n    const updatedBlog = await blogService.update(likedBlog)\n    props.likeBlogAction(updatedBlog)\n    await notify(`blog ${updatedBlog.title} by ${updatedBlog.author} liked!`)\n  }\n\n  const removeBlog = async (blog) => {\n    const ok = window.confirm(`remove blog ${blog.title} by ${blog.author}`)\n    if (ok) {\n      const updatedBlog = await blogService.remove(blog)\n      props.removeBlogAction(props.blogs.filter(b => b.id !== blog.id))\n      notify(`blog ${updatedBlog.title} by ${updatedBlog.author} removed!`)\n    }\n  }\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <p>{props.user && props.user.name} logged in</p>\n      <button onClick={props.handleLogout}>logout</button>\n\n      <Togglable buttonLabel='create new' ref={newBlogRef}>\n        <NewBlog createBlog={createBlog} />\n      </Togglable>\n\n      {props.blogs.sort(byLikes).map(blog =>\n        <Blog\n          key={blog.id}\n          blog={blog}\n          like={likeBlog}\n          remove={removeBlog}\n          user={props.user}\n          creator={blog.user.username === props.user.username}\n        />\n      )}\n    </div>\n  )\n}\n\n\nexport default ListBlogs"]},"metadata":{},"sourceType":"module"}