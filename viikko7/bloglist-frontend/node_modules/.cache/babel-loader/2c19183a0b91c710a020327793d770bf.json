{"ast":null,"code":"import _regeneratorRuntime from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar baseUrl = '/api/blogs';\nvar token = null;\n\nvar getConfig = function getConfig() {\n  return {\n    headers: {\n      Authorization: token\n    }\n  };\n};\n\nvar setToken = function setToken(newToken) {\n  token = \"bearer \".concat(newToken);\n};\n\nvar destroyToken = function destroyToken() {\n  token = null;\n};\n\nvar getAll = function getAll() {\n  var request = axios.get(baseUrl);\n  return request.then(function (response) {\n    return response.data;\n  });\n};\n\nvar create =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(newObject) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(baseUrl, newObject, getConfig());\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function create(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar update =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(newObject) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.put(\"\".concat(baseUrl, \"/\").concat(newObject.id), newObject, getConfig());\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function update(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar remove =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(object) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.delete(\"\".concat(baseUrl, \"/\").concat(object.id), getConfig());\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function remove(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update,\n  remove: remove,\n  setToken: setToken,\n  destroyToken: destroyToken\n};","map":{"version":3,"sources":["/home/eero/sites/fullstackwebsovelluskehitys/viikko7/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","getConfig","headers","Authorization","setToken","newToken","destroyToken","getAll","request","get","then","response","data","create","newObject","post","update","put","id","remove","object","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AACvBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEH;AAAjB;AADc,GAAP;AAAA,CAAlB;;AAIA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,QAAQ,EAAI;AAC3BL,EAAAA,KAAK,oBAAaK,QAAb,CAAL;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBN,EAAAA,KAAK,GAAG,IAAR;AACD,CAFD;;AAIA,IAAMO,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,OAAO,GAAGV,KAAK,CAACW,GAAN,CAAUV,OAAV,CAAhB;AACA,SAAOS,OAAO,CAACE,IAAR,CAAa,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAb;AAAA,GAArB,CAAP;AACD,CAHD;;AAKA,IAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUhB,KAAK,CAACiB,IAAN,CAAWhB,OAAX,EAAoBe,SAApB,EAA+Bb,SAAS,EAAxC,CADV;;AAAA;AACPU,YAAAA,QADO;AAAA,6CAENA,QAAQ,CAACC,IAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAKA,IAAMG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAMF,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUhB,KAAK,CAACmB,GAAN,WAAalB,OAAb,cAAwBe,SAAS,CAACI,EAAlC,GAAwCJ,SAAxC,EAAmDb,SAAS,EAA5D,CADV;;AAAA;AACPU,YAAAA,QADO;AAAA,8CAENA,QAAQ,CAACC,IAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANI,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAKA,IAAMG,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUtB,KAAK,CAACuB,MAAN,WAAgBtB,OAAhB,cAA2BqB,MAAM,CAACF,EAAlC,GAAwCjB,SAAS,EAAjD,CADV;;AAAA;AACPU,YAAAA,QADO;AAAA,8CAENA,QAAQ,CAACC,IAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANO,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAKA,eAAe;AAAEZ,EAAAA,MAAM,EAANA,MAAF;AAAUM,EAAAA,MAAM,EAANA,MAAV;AAAkBG,EAAAA,MAAM,EAANA,MAAlB;AAA0BG,EAAAA,MAAM,EAANA,MAA1B;AAAkCf,EAAAA,QAAQ,EAARA,QAAlC;AAA4CE,EAAAA,YAAY,EAAZA;AAA5C,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject, getConfig())\n  return response.data\n}\n\nconst update = async newObject => {\n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject, getConfig())\n  return response.data\n}\n\nconst remove = async object => {\n  const response = await axios.delete(`${baseUrl}/${object.id}`, getConfig())\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken, destroyToken }"]},"metadata":{},"sourceType":"module"}